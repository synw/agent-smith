import{d as l,c as r,o as d,a as t,g as s,i as o,f as n,H as a,M as i}from"./index-ruRH7gpx.js";import{_ as m}from"./AgentV3.vue_vue_type_style_index_0_lang-ClewsMg9.js";import"./RobotIcon-D5Ng_BBb.js";const c={class:"flex flex-col space-y-5 mt-5"},p='<div v-html="state.text"></div>',u='import { state } from "../agent";',g=`<div v-if="state.isInteracting === true" class="bubble bubble-bottom-left mr-5 txt-light">
    <agent-base-text v-if="state.component == 'AgentBaseText'"></agent-base-text>
</div>`,j=l({__name:"components",setup(f){return(v,e)=>(d(),r("div",null,[e[3]||(e[3]=t("div",{class:"prosed"},[t("h1",null,"Components")],-1)),t("div",c,[e[0]||(e[0]=t("div",null,[o("In this part we will map component as the agent interaction widget. This way we can use different widgets for our interactions."),t("br"),t("br"),o(" Let's start by setting a dynamic interaction subcomponent in the agent component, instead of using just text. First let's create a basic "),t("kbd",null,"agent/widgets/AgentText.vue"),o(": the template part: ")],-1)),t("div",null,[s(n(i),{hljs:n(a),code:p,lang:"html"},null,8,["hljs"])]),e[1]||(e[1]=t("div",null,"The script part:",-1)),t("div",null,[s(n(i),{hljs:n(a),code:u,lang:"ts"},null,8,["hljs"])]),e[2]||(e[2]=t("div",null,"In the agent code map the component to the state:",-1)),t("div",null,[s(n(i),{hljs:n(a),code:g,lang:"html"},null,8,["hljs"])])]),s(m),e[4]||(e[4]=t("div",{class:"mt-8"},[t("a",{href:"javascript:openLink('/the_body/interactions/confirm')"},"Next: the confirm interaction")],-1))]))}});export{j as default};
