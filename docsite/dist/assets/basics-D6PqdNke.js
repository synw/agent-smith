import{d as f,r as y,u as c,b,c as o,o as a,a as e,h as r,i as v,g as m,f as l,H as d,M as i,t as p}from"./index-BPJ47-82.js";const j={class:"flex flex-col space-y-5 mt-5"},k={key:0,class:"txt-light"},L={key:1,class:"txt-light"},T={key:2,class:"txt-light"},w={key:3,class:"txt-light"},C=`import { useLmBackend, useLmExpert } from "@agent-smith/brain";

const ex = useLmExpert({
    name: "demo",
    backend: useLmBackend({ name: "browser", localLm: "browser" }),
    template: "chatml",
    model: { name: "dummy", ctx: 2048 },
});`,M=`<div class="text-light">
    <pre>{{ ex.template.render() }}</pre>
</div>`,S=`function addSystemMsg() {
    ex.template.replaceSystem("You are a javascript AI code assistant")
}`,B='function modifyPompt() {\n    ex.template.replacePrompt("fix this invalid json:\n\n```json\n{prompt}\n```")\n}',P='{{ ex.template.prompt("{a: 1,}") }}',A=f({__name:"basics",setup(N){const s=y(1),n=c({name:"demo",backend:b({name:"browser",localLm:"browser"}),template:"chatml",model:{name:"dummy",ctx:2048}});function h(){console.log("TPL",n.template.name),n.template.replaceSystem("You are a javascript AI code assistant"),s.value=2}function g(){n.template.replacePrompt("fix this invalid json:\n\n```json\n{prompt}\n```"),s.value=3}function x(){s.value=4}return(E,t)=>(a(),o("div",null,[t[14]||(t[14]=e("div",{class:"prosed"},[e("h1",null,"Templates")],-1)),e("div",j,[t[3]||(t[3]=e("div",null,[v("The templates are managed with the "),e("a",{href:"https://github.com/synw/modprompt"},"Modprompt"),v(" library. Create an expert with a ChatMl template:")],-1)),e("div",null,[m(l(i),{hljs:l(d),code:C,lang:"ts"},null,8,["hljs"])]),t[4]||(t[4]=e("div",null,"Let's see what the template looks like:",-1)),s.value==1?(a(),o("div",k,[e("pre",null,p(l(n).template.render()),1)])):r("",!0),e("div",null,[m(l(i),{hljs:l(d),code:M,lang:"html"},null,8,["hljs"])]),t[5]||(t[5]=e("div",{class:"prose"},[e("h2",null,"System")],-1)),t[6]||(t[6]=e("div",null,"Let's add a system message:",-1)),e("div",null,[e("button",{class:"btn light",onClick:t[0]||(t[0]=u=>h())},"Add system message")]),t[7]||(t[7]=e("div",null,"The template:",-1)),s.value==2?(a(),o("div",L,[e("pre",null,p(l(n).template.render()),1)])):r("",!0),e("div",null,[m(l(i),{hljs:l(d),code:S,lang:"ts"},null,8,["hljs"])]),t[8]||(t[8]=e("div",{class:"prose"},[e("h2",null,"Prompt")],-1)),t[9]||(t[9]=e("div",null,"To modify the prompt:",-1)),e("div",null,[e("button",{class:"btn light",onClick:t[1]||(t[1]=u=>g())},"Modify the prompt")]),t[10]||(t[10]=e("div",null,"The template:",-1)),s.value==3?(a(),o("div",T,[e("pre",null,p(l(n).template.render()),1)])):r("",!0),e("div",null,[m(l(i),{hljs:l(d),code:B,lang:"ts"},null,8,["hljs"])]),t[11]||(t[11]=e("div",null,"To render the template with a prompt:",-1)),e("div",null,[e("button",{class:"btn light",onClick:t[2]||(t[2]=u=>x())},"Render the template")]),t[12]||(t[12]=e("div",null,"The template:",-1)),s.value==4?(a(),o("div",w,[e("pre",null,p(l(n).template.prompt("{a: 1,}")),1)])):r("",!0),e("div",null,[m(l(i),{hljs:l(d),code:P,lang:"html"},null,8,["hljs"])]),t[13]||(t[13]=e("div",{class:"pt-5"},[e("a",{href:"javascript:openLink('/the_brain/templates/history')"},"Next: history")],-1))])]))}});export{A as default};
